{"version":3,"sources":["components/Header.js","components/Info.js","components/Canvas.js","components/Main.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","FontAwesomeIcon","faUmbrella","className","id","icon","Info","umbrellaTag","buttonStyles","buttonPTags","descriptionStyle","linkStyle","rel","href","target","onClick","window","location","reload","dlLink","document","getElementById","cnv","toDataURL","download","Canvas","canvasWidth","innerWidth","canvasHeight","getRandNum","min","max","Math","ceil","floor","random","useState","type","count","values","setup","p5","canvasParentRef","pixelDensity","createCanvas","parent","noLoop","noStroke","changeCanvasWidth","multiplier","resizeCanvas","addEventListener","draw","background","forEach","x","i","xCord","yCord","towerXCord","towerStrokeStart","towerStrokeEnd","fill","rect","stroke","strokeWeight","line","circle","Main","About","faInstagram","faTwitter","gaTag","iconStyle","pTagDropShadow","iconTemplate","specifiedIcon","link","src","alt","Footer","faCreativeCommons","pTagStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.90adf6eb.chunk.js","sourcesContent":["const Header = ({ FontAwesomeIcon, faUmbrella }) => {\n  return (\n    <div className=\"border-b border-gray-900\">\n      <header className=\"flex justify-center items-center py-4\">\n        <FontAwesomeIcon\n          id=\"logo\"\n          className=\"text-xl text-gray-900 animate-rainbowFlash hover:animate-bounce\"\n          icon={faUmbrella}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","const Info = () => {\n  const umbrellaTag = (\n    <span className=\"uppercase font-maven animate-rainbowFlash\">umbrella</span>\n  );\n\n  const buttonStyles =\n    \"w-full mb-8 border-2 py-2 hover:shadow-hardline transition rounded-sm duration-200 border-gray-900 text-gray-900\";\n\n  const buttonPTags =\n    \"b850:text-sm b750:text-xs font-rbto uppercase text-base \";\n\n  const descriptionStyle = \"b850:text-sm b750:text-xs\";\n\n  const linkStyle = \"text-blue-800 hover:underline\";\n\n  // better way to reset canvas needs to be made here\n  const newCanvas = () => {\n    window.location.reload();\n  };\n\n  const saveUmbrella = () => {\n    const dlLink = document.getElementById(\"downloadLink\");\n    let cnv = document.getElementById(\"defaultCanvas0\");\n    dlLink.href = cnv.toDataURL(\"image/png\");\n  };\n\n  return (\n    <div className=\"ml-10 b675:pl-0 text-gray-900 font-source max-w-xl b675:mt-6 b675:ml-0\">\n      <div className=\"\">\n        <h1 className=\"b1000:text-5xl b850:text-3xl b750:text-xl mb-8 b1000:mb-4\">\n          Welcome to {umbrellaTag}.\n        </h1>\n        <p className={descriptionStyle}>\n          An experiment in generative art created by{\" \"}\n          <a\n            rel=\"noreferrer\"\n            className={`${linkStyle} uppercase`}\n            href=\"https://gulaganthem.com\"\n            target=\"_blank\"\n          >\n            gulag anthem\n          </a>\n          .\n        </p>\n        <p className={descriptionStyle}>\n          Press the <span className=\"uppercase font-rbto\">Generate</span> button\n          to create an art piece through the {umbrellaTag} algorithm. No two\n          generations are the same. Enjoy.\n        </p>\n\n        <p className={`${descriptionStyle} mt-4`}>\n          Share your generations with{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://twitter.com/search?q=umbrellaNFT\"\n            className={`font-maven ${linkStyle}`}\n          >\n            #umbrellaNFT\n          </a>\n          .\n        </p>\n        <a href=\"https://opensea.io/collection/umbrella-code\" target=\"_blank\">\n          <p\n            className={`${descriptionStyle} ${linkStyle} inline-block mt-4 mb-8 b1000:mb-4`}\n          >\n            10 piece NFT collection available on OpenSea.\n          </p>\n        </a>\n      </div>\n\n      <button onClick={newCanvas} className={buttonStyles}>\n        <p className={buttonPTags}>Generate</p>\n      </button>\n      <a id=\"downloadLink\" href=\"/\" onClick={saveUmbrella} download=\"umbrella\">\n        <button className={buttonStyles}>\n          <p className={buttonPTags}>Download Image</p>\n        </button>\n      </a>\n    </div>\n  );\n};\n\nexport default Info;\n","import Sketch from \"react-p5\";\nimport { useState } from \"react\";\n\nconst Canvas = () => {\n  // declare initial canvas height and width\n  let canvasWidth =\n    window.innerWidth > 675\n      ? window.innerWidth * 0.35\n      : window.innerWidth * 0.9;\n  let canvasHeight = canvasWidth + canvasWidth * 0.4;\n\n  // returns random number between min and max params\n  const getRandNum = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  // state that holds types and quantities of shapes to be painted on canvas\n  const [values] = useState([\n    { type: \"glitch\", count: 100000 },\n    { type: \"tower\", count: getRandNum(50, 500) },\n    { type: \"star\", count: getRandNum(50, 125) },\n  ]);\n\n  // setup for p5 canvas\n  const setup = (p5, canvasParentRef) => {\n    p5.pixelDensity(5);\n    p5.createCanvas(canvasWidth, canvasHeight).parent(canvasParentRef);\n    p5.noLoop();\n    p5.noStroke();\n\n    // function to handle resize\n    const changeCanvasWidth = (multiplier) => {\n      if (\n        window.innerWidth > canvasWidth / multiplier + 10 ||\n        window.innerWidth < canvasWidth / multiplier - 10\n      ) {\n        canvasWidth = window.innerWidth * multiplier;\n        canvasHeight = canvasWidth + canvasWidth * 0.4;\n        p5.resizeCanvas(canvasWidth, canvasHeight);\n        p5.noStroke();\n      }\n    };\n\n    // runs on window resize\n    window.addEventListener(\"resize\", () => {\n      if (window.innerWidth > 675) {\n        changeCanvasWidth(0.35);\n      } else {\n        changeCanvasWidth(0.9);\n      }\n    });\n  };\n\n  const draw = (p5) => {\n    p5.background(\"#121212\");\n\n    //  loops through values state and draws it based on determined parameters within values\n    values.forEach((x) => {\n      for (let i = 0; i <= x.count; i++) {\n        let xCord = getRandNum(0, canvasWidth);\n        let yCord = getRandNum(0, canvasHeight);\n        let towerXCord = getRandNum(0, canvasWidth);\n        let towerStrokeStart = canvasWidth * 0.01157;\n        let towerStrokeEnd = towerStrokeStart * 2;\n        let rectWidth = 2;\n        let rectHeight = 4;\n\n        if (x.type === \"glitch\") {\n          p5.fill(\n            getRandNum(0, 256),\n            getRandNum(0, 256),\n            getRandNum(0, 256)\n          ).rect(xCord, yCord, rectWidth, rectHeight);\n        } else if (x.type === \"tower\") {\n          p5.stroke(\"rgba(0, 0, 0, .8)\")\n            .strokeWeight(getRandNum(towerStrokeStart, towerStrokeEnd))\n            .line(towerXCord, 0, towerXCord, getRandNum(0, canvasHeight));\n        } else if (x.type === \"star\") {\n          p5.fill(\"rgba(255, 255, 255, .75)\")\n            .strokeWeight(0)\n            .circle(\n              getRandNum(0, canvasWidth),\n              getRandNum(0, canvasHeight * 0.75),\n              1.5\n            );\n        }\n      }\n    });\n  };\n\n  return <Sketch className=\"pr-10 b675:pr-0\" setup={setup} draw={draw} />;\n};\n\nexport default Canvas;\n","import Info from \"./Info\";\nimport Canvas from \"./Canvas\";\n\n// Main page consisting of Canvas and Info components\nconst Main = () => {\n  return (\n    <div\n      id=\"mainContainer\"\n      className=\"mx-auto flex justify-center my-14 px-20 b675:flex-col b675:items-center b675:px-6 b675:mt-8 max-w-7xl\"\n    >\n      <Canvas />\n      <Info />\n    </div>\n  );\n};\n\nexport default Main;\n","const About = ({ FontAwesomeIcon, faInstagram, faTwitter }) => {\n  const umbrellaTag = <span className=\"font-maven uppercase\">Umbrella</span>;\n  const linkStyle = \"text-blue-500 hover:underline\";\n  const gaTag = <span className=\"uppercase\">gulag anthem</span>;\n  const iconStyle = \"text-gray-200 text-2xl mx-6\";\n  const pTagDropShadow = \"shadow-coldwar p-5 rounded border-4 border-gray-700\";\n  const descriptionStyle = \"b850:text-sm b750:text-xs\";\n\n  // templating function for icons\n  const iconTemplate = (specifiedIcon, link) => {\n    return (\n      <a rel=\"noreferrer\" href={link} target=\"_blank\" className={iconStyle}>\n        <FontAwesomeIcon\n          id=\"logo\"\n          className=\"transform hover:scale-125 transition\"\n          icon={specifiedIcon}\n        />\n      </a>\n    );\n  };\n\n  return (\n    <div id=\"aboutContainer\" className=\"bg-gray-900 pb-14\">\n      <div id=\"aboutInner\" className=\"max-w-7xl mx-auto px-20 py-14 b675:px-6\">\n        <h1 className=\"font-rbto text-white b1000:text-6xl b850:text-5xl\">\n          About{\" \"}\n          <span className={`font-maven uppercase animate-rainbowFlash`}>\n            umbrella\n          </span>\n        </h1>\n        <div\n          id=\"aboutContent\"\n          className=\"mt-14 flex justify-center items-center bg-gray-800 py-10 rounded px-10 b1000:flex-col b675:px-6 b675:py-5\"\n        >\n          <div className=\"w-1/2 mr-10 b1250:mr-5 b1000:mr-0 b1000:w-3/4 b750:w-full\">\n            <img\n              src=\"./assets/yuri.jpg\"\n              alt=\"yuri\"\n              className=\"w-full h-auto rounded shadow-coldwar border-4 border-gray-700\"\n            />\n          </div>\n          <section className=\"ml-10 text-gray-200 w-1/2 b1250:ml-5 b1000:ml-0 b1000:mt-8 b1000:w-3/4 b750:w-full\">\n            <p className={`${pTagDropShadow} ${descriptionStyle} mb-8`}>\n              {umbrellaTag} is the first generative art project from digital\n              artist {gaTag}. The {umbrellaTag} algorithm uses a react\n              integration of{\" \"}\n              <a\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                className={linkStyle}\n                href=\"https://p5js.org/\"\n              >\n                p5.js\n              </a>{\" \"}\n              created by Gherciu Gheorghe that can be found{\" \"}\n              <a\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                className={linkStyle}\n                href=\"https://github.com/Gherciu/react-p5\"\n              >\n                here\n              </a>\n              . {umbrellaTag} derives its name from the processes the algorithm\n              employs to generate its unique images.\n            </p>\n            <p className={`${pTagDropShadow} ${descriptionStyle}`}>\n              Generated images are free for non-commercial use. For updates on\n              the {umbrellaTag} project, follow {gaTag} on{\" \"}\n              <a\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                className={linkStyle}\n                href=\"https://twitter.com/gulaganthem\"\n              >\n                twitter\n              </a>\n              .\n            </p>\n            <div className=\"mt-8 flex justify-center\">\n              {iconTemplate(\n                faInstagram,\n                \"https://www.instagram.com/gulaganthem/\"\n              )}\n              {iconTemplate(faTwitter, \"https://twitter.com/gulaganthem\")}\n              <a\n                rel=\"noreferrer\"\n                className={`${iconStyle}`}\n                href=\"https://gulaganthem.com\"\n                target=\"_blank\"\n              >\n                <p\n                  className={`transition transform hover:scale-125 font-jSans inline-block text-2xl`}\n                >\n                  GA\n                </p>\n              </a>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","const Footer = ({ FontAwesomeIcon, faCreativeCommons }) => {\n  const pTagStyle = \"text-base b675:text-sm\";\n  return (\n    <footer className=\"h-16 w-full\">\n      <div\n        id=\"innerFooter\"\n        className=\"flex justify-between max-w-7xl px-20 mx-auto items-center h-full b675:px-6 b440:flex-col b440:justify-center\"\n      >\n        <div className=\"flex items-center\">\n          <FontAwesomeIcon\n            id=\"logo\"\n            className=\"transform hover:scale-125 transition mr-1 b675:text-sm\"\n            icon={faCreativeCommons}\n          />{\" \"}\n          <p className={`${pTagStyle} inline`}>GULAG ANTHEM</p>\n        </div>\n        <p className={`${pTagStyle}`}>those who do not build must burn.</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport About from \"./components/About\";\nimport Footer from \"./components/Footer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUmbrella } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faCreativeCommons,\n  faInstagram,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst App = () => {\n  return (\n    <div className=\" bg-gray-200 \">\n      <Header FontAwesomeIcon={FontAwesomeIcon} faUmbrella={faUmbrella} />\n      <Main />\n      <About\n        FontAwesomeIcon={FontAwesomeIcon}\n        faInstagram={faInstagram}\n        faTwitter={faTwitter}\n      />\n      <Footer\n        FontAwesomeIcon={FontAwesomeIcon}\n        faCreativeCommons={faCreativeCommons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}